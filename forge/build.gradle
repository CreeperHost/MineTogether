plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

def depProjects = [":common"]

dependencies {
//    minecraft("com.mojang:minecraft:${rootProject.architectury.minecraft}")
//    mappings(minecraft.officialMojangMappings())

    depProjects.forEach {
        common(project(path: it, configuration: "namedElements")) { transitive false }
        shadowCommon(project(path: it, configuration: "transformProductionForge")) { transitive false }
    }

    forge("net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}")
    modApi("dev.architectury:architectury-forge:${rootProject.architectury_version}")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation 'com.github.scribejava:scribejava-apis:6.9.0'
    implementation 'com.github.scribejava:scribejava-core:6.9.0'
//    implementation("net.creeperhost.minetogether:minetogether-api:${rootProject.minetogether_api_version}")
    implementation("net.creeperhost.minetogether:minetogether-api:${rootProject.minetogether_api_version}")

    shadowCommon 'org.nanohttpd:nanohttpd:2.3.1'
    shadowCommon 'com.github.scribejava:scribejava-apis:6.9.0'
    shadowCommon 'com.github.scribejava:scribejava-core:6.9.0'
    shadowCommon "net.creeperhost.minetogether:minetogether-api:${rootProject.minetogether_api_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    // Don't shadow netty, we already have it.
    dependencies {
        exclude(dependency("io.netty::"))
//        exclude(dependency("com.google.guava::"))
    }

    // Relocate fluent-hc to prevent conflicts with other mods that include it
    relocate 'com.github.scribejava', 'net.creeperhost.minetogether.com.github.scribejava'
    relocate 'fi.iki.elonen', 'net.creeperhost.minetogether.fi.iki.elonen'
    relocate 'com.fasterxml.jackson', 'net.creeperhost.minetogether.com.fasterxml.jackson'
//    relocate 'net.creeperhost.minetogether.lib', 'net.creeperhost.minetogether.minetogetherlib'

//    classifier '' // Replace the default JAR
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
