buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = 'CreeperHost Maven'
            url = 'https://maven.creeperhost.net'
        }
        maven {
            name = 'Sponge Maven'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version + "-" +  config.mod_version}"
if (hasProperty('appendBuildNumber')) {
    version = version + "-" + appendBuildNumber.toString()
}

group = 'net.creeperhost'
archivesBaseName = 'MineTogether'

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=minetogether.mixins.json"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                minetogether {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }

}

mixin {
    add sourceSets.main, "minetogether.refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "MineTogether",
                "Specification-Vendor": "CreeperHost",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"CreeperHost",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "minetogether.mixins.json"
        ])
    }
}

targetCompatibility = sourceCompatibility = '1.8'

configurations {
    shadow
    compile.extendsFrom shadow
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.37'

    shadow 'org.nanohttpd:nanohttpd:2.3.1'
    shadow 'com.github.scribejava:scribejava-apis:6.9.0'
    shadow 'com.github.scribejava:scribejava-core:6.9.0'
    shadow group: 'org.jitsi', name: 'ice4j', version: '3.0-29-g3e0a9f9'

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

shadowJar {
    configurations = [project.configurations.shadow]

    // Don't shadow netty, we already have it.
    dependencies {
        exclude(dependency("io.netty::"))
    }

    relocate 'com.github.scribejava', 'net.creeperhost.minetogether.com.github.scribejava'
    relocate 'fi.iki.elonen', 'net.creeperhost.minetogether.fi.iki.elonen'
    relocate 'com.fasterxml.jackson', 'net.creeperhost.minetogether.com.fasterxml.jackson'

    classifier '' // Replace the default JAR
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}